package main.java.com.vlad_kostromin.javacore.chapter15;

interface MyNumber {
    double getValue();
}

public class LambdaDemo {
    public static void main(String[] args) {
        MyNumber myNumber; //Объявить ссылку на функциональный интерфейс
        /*
        Здесь лямбда-выражение просто является константным выражением.
        Когда оно присваивается ссылочной переменной myNum, получается
        экземпляр класса, в котором лямбда-выражение реализует
        метод getValue() из функционального интерфейса MyNumber
         */

        myNumber = () -> 123.45;

        //вызвать метод getValue(), предоствляемый
        //присвоенным ранее лямда-выражением

        System.out.println("Фиксированное значение: " + myNumber.getValue());

        //а здесь используется полее сложное выражение
        myNumber = () -> Math.random() * 100;

        //в следующих строках кода вызывается лямбда-выражение
        //из предыдущей строки кода
        System.out.println("Случайное значение: " + myNumber.getValue());
        System.out.println("Еще одно случайное значение: " + myNumber.getValue());

        //Лямбда-выражение должно быть совместимо с абстрактным методом,
        //определяемым в функцмональном интерфейсе. Поэтому следущая
        //строка кода ошибочна:
//        myNumber = () -> "123.45"; //Ошибка!
    }
}
